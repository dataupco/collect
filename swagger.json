{
  "apiVersion" : "0.1",
  "swaggerVersion" : "1.2",
  "basePath" : "https://proxy-dataupco.rhcloud.com",
  "resourcePath" : "/",
  "apis" : [
    {
      "path" : "/ok",
      "description" : "Health check",
      "operation" : [
        {
          "method" : "GET",
          "nickname" : "getOk",
          "type" : "integer",
          "parameters" : [],
          "summary" : "Indicates health of server",
          "notes" : "Any 200 response should be considered healthy",
          "errorResponses" : [
            {
              "code" : 404,
              "message" : "The server is not running"
            },
            {
              "code" : 500,
              "message" : "Something is wrong with the deployment"
            }
          ]
        }
      ]
    },
    {
      "path" : "/login",
      "description" : "Initiate/Verify persona auth",
      "operation" : [
        {
          "method" : "POST",
          "nickname" : "doLogin",
          "type" : "Login",
          "parameters" : [],
          "summary" : "Establishes identity of user",
          "notes" : "Utilizes Apache Persona",
          "errorResponses" : [
            {
              "code" : 403,
              "message" : "Login failed"
            }
          ]
        }
      ]
    },
    {
      "path" : "/logout",
      "description" : "Initiates/Confirms the end of the session",
      "operation" : [
        {
          "method" : "POST",
          "nickname" : "doLogout",
          "type" : "Logout",
          "parameters" : [],
          "summary" : "Indicates health of server",
          "notes" : "Any 200 response should be considered healthy",
          "errorResponses" : [
          ]
        }
      ]
    },
    {
      "path" : "/auth/{api}",
      "description" : "Initiates authentication",
      "operation" : [
        {
          "method" : "GET",
          "nickname" : "getAuthByApi",
          "type" : "void",
          "parameters" : [
            {
              "paramType" : "path",
              "name"  : "api",
              "description" : "Identifer of the api for auth",
              "dataType" : "string",
              "required" : true
            }
          ],
          "summary" : "Initiates auth with api by redirecting to api provider for auth",
          "notes" : "Expect redirect to /auth/{api}/callback by api provider",
          "errorResponses" : [
          ]
        }
      ]
    },
    {
      "path" : "/auth/{api}/callback",
      "description" : "Callback URL used for OAuth",
      "operation" : [
        {
          "method" : "GET",
          "nickname" : "getAuthCallbackByApi",
          "type" : "void",
          "parameters" : [
            {
              "paramType" : "path",
              "name"  : "api",
              "description" : "Identifer of the api for auth",
              "dataType" : "string",
              "required" : true
            }
          ],
          "summary" : "Finalizes auth with api provider",
          "notes" : "Redirects to user. Expect 'e' parameter in redirect on failure",
          "errorResponses" : [
          ]
        }
      ]
    },
    {
      "path" : "/api/{api}/{relativeUrl}",
      "description" : "Initiates authentication",
      "operation" : [
        {
          "method" : "GET",
          "nickname" : "getApiWithUrl",
          "type" : "Anything",
          "parameters" : [
            {
              "paramType" : "path",
              "name"  : "api",
              "description" : "Identifer of the api to access",
              "dataType" : "string",
              "required" : true
            },
            {
              "paramType" : "path",
              "name"  : "relativeUrl",
              "description" : "Relative Url to call on api provider",
              "dataType" : "string",
              "required" : false
            },
            {
              "paramType" : "query",
              "name"  : "jsonp",
              "description" : "Funtion to use for callback",
              "dataType" : "string",
              "required" : false
            }
          ],
          "summary" : " api provider for auth",
          "notes" : "Errors will have an error parameter",
          "errorResponses" : [
          ]
        }
      ]
    },
  ],
  "models" : {
    "Error" : {
      "id : "Error",
      "properties" : {
        "error" : {
          "type" : "string",
          "description" : "String description of the error"
        }
      }
    }
    "Login" : {
      "id : "Login",
      "properties" : {
        "id" : {
          "type" : "string",
          "description" : "Identifier for the user"
        }
      }
    },
    "Logout" : {
      "id : "Logout",
      "properties" : {
        "status" : {
          "type" : "boolean",
          "description" : "Indicates whether logout succeeded. Always will if response was 200...."
        }
      }
    },
    "Anything" : {
      "id : "Anything",
      "properties" : {
      }
  }
}
